lang en_US.UTF-8
keyboard us
text
timezone GMT --utc --nontp
auth --useshadow --passalgo=sha512
rootpw root
selinux --disabled
firewall --disabled

repo --name=base --baseurl=http://mirror.centos.org/centos/7/os/x86_64/
repo --name=updates --baseurl=http://mirror.centos.org/centos/7/updates/x86_64/

%packages  --excludedocs

@core
@base

shim-x64
grub2-efi-x64-cdboot
kernel
kernel-modules
anaconda-core
yum-langpacks
mc
open-vm-tools
python-urwid

%end


%post --erroronfail

# Disable auto-start of Anaconda installer
#
systemctl set-default multi-user.target

# Disable kdump service
#
systemctl mask kdump.service

# Disable chronyd service
#
systemctl mask chronyd.service

# Enable ssh
#
systemctl enable sshd

# Enable LiveCD repos only
#
for path in $(find /etc/yum.repos.d/ -type f) ; do
    rm -rf $path
done
for path in $(find /etc/pki/rpm-gpg/ -type f) ; do
    case "$path" in
        */RPM-GPG-KEY-CentOS-7) ;;
        *) rm -rf $path ;;
    esac
done
#
cat > /etc/yum.repos.d/media.repo << EOF
[c7-media]
name=CentOS-Media
baseurl=file:///run/initramfs/live/packages
gpgcheck=1
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
EOF

# Fix exception handling in Anaconda installer for the case when there is no Gtk library on ISO
#
sed -i 's/\(^\s*\)\(except.*RuntimeError.*ImportError.*$\)/\1except (RuntimeError, ImportError, ValueError): # \2/' /usr/lib64/python2.7/site-packages/pyanaconda/exception.py

# Tweak Anaconda installer to enable installation when network is not ready
#
sed -i 's/\(^\s*\)\(return.*self\.data\.method\.method.*in.*$\)/\1return False # \2/' /usr/lib64/python2.7/site-packages/pyanaconda/ui/tui/spokes/network.py

# Tweak Anaconda installer to completely disable user interaction
#
sed -i 's/\(^.*iutil\.ipmi_report.*IPMI_FINISHED.*$\)/\1;self.input(None,None)/' /usr/lib64/python2.7/site-packages/pyanaconda/ui/tui/spokes/progress.py

# Tweak Anaconda installer to disable unconditional reboot at exit
#
sed -i 's/\(^\s*\)\(iutil\.execWithRedirect.*systemctl.*--no-wall.*reboot.*$\)/\1pass # \2/' /usr/sbin/anaconda

# Enable root auto login
#
rm /etc/systemd/system/getty.target.wants/getty@tty1.service
cp /lib/systemd/system/getty@.service /etc/systemd/system/getty@tty1.service
sed -i 's/\(^.*ExecStart=.*$\)/\1 --autologin root/' /etc/systemd/system/getty@tty1.service
echo ';Alias=getty@tty1.service' >> /etc/systemd/system/getty@tty1.service
ln -s /etc/systemd/system/getty@tty1.service /etc/systemd/system/getty.target.wants/getty@tty1.service

# hide any kernel messages from the console
cat > /etc/sysctl.d/20-quiet-printk.conf << EOF
kernel.printk = 3 3 3 3
EOF

# Predefined hostname
#
echo -n "centos7iso" > /etc/hostname

%end


%post --erroronfail --nochroot

# Put system packages
#
cp -r yumdata/packages     $LIVE_ROOT
cp    yumdata/.buildstamp  $INSTALL_ROOT

# Scripts for auto installation
#
cp autostart.sh $INSTALL_ROOT/root
chmod +x $INSTALL_ROOT/root/autostart.sh
#
{
   echo ''
   echo '# autostart'
   echo 'if [ "$(tty)" = "/dev/tty1" -a -n "$(cat /proc/cmdline | grep -w autostart)" ]; then'
   echo '  if [ ! -f "/tmp/autostart.stamp" ]; then'
   echo '    touch /tmp/autostart.stamp'
   echo '    /root/autostart.sh'
   echo '  fi'
   echo 'fi'
} >> $INSTALL_ROOT/root/.bash_profile

# Customize boot-menu of LiveCD
#
rm -f $LIVE_ROOT/isolinux/isolinux.cfg
cp isolinux.cfg $LIVE_ROOT/isolinux
rm -f $LIVE_ROOT/EFI/BOOT/grub.cfg
cp -T grub_efi.cfg $LIVE_ROOT/EFI/BOOT/grub.cfg
rm -rf efimnt
mkdir -p efimnt
mount -o loop $LIVE_ROOT/isolinux/efiboot.img efimnt
rm -f efimnt/EFI/BOOT/grub.cfg
cp -T grub_efi.cfg efimnt/EFI/BOOT/grub.cfg
umount efimnt
%end
